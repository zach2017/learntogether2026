version: "3.9"

services:
  db:
    image: postgres
    container_name: demo_db
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [demo]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build: ./backend
    container_name: demo_backend
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/appdb
      OTEL_SERVICE_NAME: backend
      OTEL_RESOURCE_ATTRIBUTES: service.version=1.0.0,service.namespace=demo
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      OTEL_METRICS_EXPORTER: otlp
      OTEL_TRACES_EXPORTER: otlp
    depends_on:
      db:
        condition: service_healthy
      otel-collector:
        condition: service_started
    ports:
      - "8000:8000"
    networks: [demo]
    command: >
      opentelemetry-instrument
      --metrics_exporter otlp
      --traces_exporter otlp
      uvicorn app.main:app --host 0.0.0.0 --port 8000

  frontend:
    build: ./frontend
    container_name: demo_frontend
    depends_on:
      - backend
    ports:
      - "3001:80"
    networks: [demo]

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.102.0
    container_name: demo_otel_collector
    command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /var/log:/var/log:ro
    environment:
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
    ports:
      - "9445:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8889:8889"   # Prometheus exporter metrics endpoint
    networks: [demo]
    privileged: true

  # Container metrics with cAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: demo_cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks: [demo]
    restart: unless-stopped

  # Host system metrics with Node Exporter
  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: demo_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netdev.device-exclude=^(veth.*|docker.*|br-.*|lo)$$'
    networks: [demo]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: demo_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=3d"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks: [demo]
    depends_on:
      - otel-collector
      - cadvisor
      - node-exporter

  tempo:
    image: grafana/tempo:2.6.1
    container_name: demo_tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
      - tempo_data:/var/tempo
    ports:
      - "3200:3200" # http
      - "9444:4317" # otlp grpc (internal only; we won't publish)
    networks: [demo]
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:11.2.0
    container_name: demo_grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks: [demo]
    depends_on:
      - prometheus
      - tempo

networks:
  demo:
    driver: bridge

volumes:
  db_data:
  prom_data:
  tempo_data:
  grafana_data: