version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./backend/db/init:/docker-entrypoint-initdb.d
    networks: [appnet]

  redis:
    image: redis:7
    networks: [appnet]

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_CONSOLE_PORT}:9001"
    networks: [appnet]

  create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 3;
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb -p local/${MINIO_BUCKET} || true;
      "
    networks: [appnet]

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks: [appnet]

  model-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
   
    networks: [appnet]


  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      minio:
        condition: service_started
      create-bucket:
        condition: service_completed_successfully
      ollama:
        condition: service_healthy
      model-init:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      OLLAMA_HOST: http://ollama:11434
      LLM_MODEL: llama2
      EMBED_MODEL: nomic-embed-text
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN}
    networks: [appnet]

  frontend:
    build: ./frontend
    depends_on:
      - backend
    environment:
      VITE_API_BASE: /api
    networks: [appnet]

  nginx:
    image: nginx:alpine
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT}:80"
    networks: [appnet]

volumes:
  pg_data: {}
  minio_data: {}
  ollama_data: {}

networks:
  appnet:
    driver: bridge
