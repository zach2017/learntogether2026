version: '3.8'

services:
  # Jupyter notebook environment for SageMaker development
  sagemaker-notebook:
    build:
      context: ./notebook
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
      - ~/.aws:/home/jovyan/.aws:ro  # Mount AWS credentials
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    networks:
      - sagemaker-net

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - sagemaker-net

  # Training container simulation
  sagemaker-training:
    build:
      context: ./training
      dockerfile: Dockerfile
    volumes:
      - ./data:/opt/ml/input/data/training
      - ./model:/opt/ml/model
      - ./output:/opt/ml/output
    environment:
      - SM_MODEL_DIR=/opt/ml/model
      - SM_CHANNEL_TRAINING=/opt/ml/input/data/training
      - SM_OUTPUT_DATA_DIR=/opt/ml/output
    networks:
      - sagemaker-net
    profiles:
      - training

  # Model serving container
  sagemaker-inference:
    build:
      context: ./inference
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./model:/opt/ml/model:ro
    environment:
      - MODEL_DIR=/opt/ml/model
    networks:
      - sagemaker-net
    profiles:
      - inference

volumes:
  minio_data:

networks:
  sagemaker-net:
    driver: bridge